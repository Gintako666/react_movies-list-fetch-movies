{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","titleField","setTitleField","movieFromServer","setMovieFromServer","errorSearch","setErrorSearch","isLoading","setIsLoading","addToList","setAddToList","htmlFor","type","id","placeholder","value","onChange","e","target","classNames","onClick","query","preventDefault","fetch","then","res","json","catch","Response","Error","Promise","reject","Title","Plot","Poster","imdbID","resolve","disabled","Boolean","some","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b408abd8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  setMovies: (x: Movie[]) => void\n  movies: Movie[]\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies, movies }) => {\n  const [titleField, setTitleField] = useState('');\n  // eslint-disable-next-line max-len\n  const [movieFromServer, setMovieFromServer] = useState<Movie>({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const [errorSearch, setErrorSearch] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [addToList, setAddToList] = useState(true);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={titleField}\n              onChange={(e) => {\n                setErrorSearch(false);\n                setTitleField(e.target.value);\n              }}\n            />\n          </div>\n\n          {errorSearch && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              onClick={(e) => {\n                e.preventDefault();\n                setIsLoading(true);\n                getMovie(titleField)\n                  .then(movie => {\n                    if ('Error' in movie) {\n                      setErrorSearch(true);\n                      setIsLoading(false);\n\n                      return Promise.reject();\n                    }\n\n                    setAddToList(false);\n                    setErrorSearch(false);\n                    setIsLoading(false);\n                    setMovieFromServer({\n                      title: movie.Title,\n                      description: movie.Plot,\n                      imgUrl: movie.Poster === 'N/A'\n                        // eslint-disable-next-line max-len\n                        ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n                        : movie.Poster,\n                      imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n                      imdbId: movie.imdbID,\n                    });\n\n                    return Promise.resolve();\n                  });\n              }}\n              disabled={Boolean(!titleField)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"addButton\"\n              type=\"button\"\n              className={classNames(\n                'button',\n                'is-primary',\n                { 'is-hidden': addToList },\n              )}\n              onClick={(e) => {\n                e.preventDefault();\n                setAddToList(true);\n\n                // eslint-disable-next-line max-len\n                if (!movies.some(movie => movie.title === movieFromServer.title)) {\n                  setMovies([...movies, movieFromServer]);\n                }\n\n                setTitleField('');\n\n                setMovieFromServer({\n                  title: '',\n                  description: '',\n                  imgUrl: '',\n                  imdbUrl: '',\n                  imdbId: '',\n                });\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        {movieFromServer.title && <MovieCard movie={movieFromServer} />}\n      </div>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=3851aa0e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}